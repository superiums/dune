name: Auto Build & Release

on:
  push:
    tags:
      - "v*"  # 当创建v开头的标签时触发
  release:
    types: [created]  # 当创建新Release时触发

jobs:
  build:
    name: Build Binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            suffix: ""
          - os: macos-latest
            goos: darwin
            suffix: ""
          - os: windows-latest
            goos: windows
            suffix: ".exe"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'  # 根据项目实际需求调整版本
        cache: true

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: amd64
      run: |
        output_name="dune-${{ matrix.goos }}-amd64${{ matrix.suffix }}"
        go build -o $output_name ./cmd/dune
        mkdir -p release
        mv $output_name release/

    - name: Create release archive
      run: |
        cd release
        tar czvf ../dune-${{ matrix.goos }}-amd64.tar.gz *
        cd ..
        rm -rf release

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dune-${{ matrix.goos }}-amd64
        path: |
          dune-${{ matrix.goos }}-amd64.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        files: |
          artifacts/**/*.tar.gz
